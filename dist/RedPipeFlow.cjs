"use strict";function t(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var s,e,i,r;Object.defineProperty(exports,"__esModule",{value:!0});var n=(r||(r=1,i=function(){if(e)return s;e=1;class t{static TOPIC_ANY="*";static TOPIC_ERROR="RedPipe::Error";static TOPIC_FINISHED="RedPipe::Finished";static TOPIC_DEFAULT="message";static TOPIC_ENUM=[t.TOPIC_ANY,t.TOPIC_ERROR,t.TOPIC_FINISHED];static EVENT_DATA="data";static EVENT_ERROR="error";static EVENT_FINISHED="finished";static STATS_DEFAULT={inputs:0,outputs:0,errors:0};constructor(){this._start=0,this._reader=0,this._nbJobs=0,this._nbData=0,this._nbAsync=0,this._jobs=[],this._data=[],this._topics=[],this._subscribers=[],this._stats={...t.STATS_DEFAULT},this._running=!1}async run(){if(!this._nbJobs||!this._nbData)return this._nbAsync?this:this.__finished();let s=!1;for(;this._reader<this._nbJobs;){const e=this._data[this._reader].shift();if(e){s=!0;const i=this.getNode(e);try{i.send(this._jobs[this._reader](e,i))}catch(s){this._stats.errors++,this.publish({topic:t.TOPIC_ERROR,payload:s,msg:e})}this._nbData--,this._reader++;break}this._start=Math.max(this._start,this._reader+1),this._reader++}return s||(this._start=0),this._reader=Math.max(this._start,this._reader%this._nbJobs),setTimeout((()=>this.run()),s?0:200),this}pipe(t){return this._jobs.push(t),this._data.push([]),this._nbJobs++,this}send({topic:s,payload:e,...i}={}){return this._nbJobs?(this._data[0].push({...i,topic:s||t.TOPIC_DEFAULT,payload:e??null}),this._start=0,this._stats.inputs++,this._running=!0,this._nbData?this._nbData++:(this._nbData++,this._reader=0,this.run()),this):this}isMessage(t){return"string"==typeof t?.topic&&void 0!==t?.payload}__finished(){if(this._running)return this.publish({topic:t.TOPIC_FINISHED,payload:{...this._stats}}),this._stats={...t.STATS_DEFAULT},this._running=!1,this}publish(s,e=null){if(!this.isMessage(s))return this;e||(e=s.topic);let i=this._topics.indexOf(e);if(i>=0)for(let t of this._subscribers[i])t(s);return t.TOPIC_ENUM.indexOf(e)<0&&this.publish(s,t.TOPIC_ANY),this}subscribe(s=t.TOPIC_ANY,e){if("string"!=typeof s||!s.length)return;if("function"!=typeof e)return;let i=this._topics.indexOf(s);return i<0&&(i=this._topics.length,this._topics.push(s),this._subscribers.push([])),this._subscribers[i].push(e),()=>this.unsubscribe(s,e)}unsubscribe(s=t.TOPIC_ANY,e){if("string"!=typeof s||!s.length)return!1;if("function"!=typeof e)return!1;if(this._topics.indexOf(s)>=0){const t=this._subscribers.indexOf(e);if(t)return this._subscribers.splice(t,1),!0}return!1}on(s,e){return s===t.EVENT_DATA&&this.subscribe(t.TOPIC_ANY,e),s===t.EVENT_ERROR&&this.subscribe(t.TOPIC_ERROR,e),s===t.EVENT_FINISHED&&this.subscribe(t.TOPIC_FINISHED,e),this}getNode(t,s=this._reader){const e={_async:0,send:t=>this.__send(t,e,s+1),retry:()=>this.__send(t,e,s),async:(t=!1)=>(t||0!==e._async?1===e._async&&(e._async=2,this._nbAsync--):(e._async=1,this._nbAsync++),e.async)};return e}__send(t,s,e){if(this.isMessage(t)){if(e<this._nbJobs){const s=Math.floor(Math.random()*this._data[e].length);return this._data[e].splice(s,0,t),this._start=Math.min(this._start,Math.max(0,e-1)),this._nbData?this._nbData++:(this._nbData++,this._reader=Math.max(this._start,this._reader%this._nbJobs),this.run()),t}this._stats.outputs++,this.publish(t),s.async(!0),!this._running||this._nbData||this._nbAsync||this.__finished()}}}return s=t}()),i),o=t(n);class a{static __worker(t,s,e=!1,i=".",r){if("string"==typeof s&&(s=s.replace(/\\\./g,"\n").split(i)),"function"!=typeof r||!Array.isArray(s)||"object"!=typeof t||null===t)return t;let n=[[t,s]];for(let t=0;t<n.length;t++){let[s,i]=n[t];for(let t=0,o=i.length;t<o&&i[t];t++)if(i[t]=i[t].replace(/[\t\r\n]/g,"."),t+1!==o){if("*"===i[t]){for(let r=0,a=s.length;r<a;r++){if(!Array.isArray(s[r])&&(/^[0-9]+$/.test(i[t+1])||t+2<o&&/^\*$/.test(i[t+1]))){if(!e)continue;s[r]=[]}if(!/^[0-9]+$/.test(i[t+1])&&("object"!=typeof s[r]||Array.isArray(s[r])||null===s[r])){if(!e)continue;s[r]={}}n.push([s[r],i.slice(t+1)])}break}if(/^[0-9]+$/.test(i[t+1])||t+2<o&&/^\*$/.test(i[t+1])&&Array.isArray(s[i[t]])){if(!Array.isArray(s[i[t]])){if(!e)break;s[i[t]]=[]}s=s[i[t]]}else{if(!/^[0-9]+$/.test(i[t+1])&&("object"!=typeof s[i[t]]||null===s[i[t]])){if(!e)break;s[i[t]]={}}s=s[i[t]]}}else r({cursor:s,lpath:i,i:t})}return t}static get(t,s,e=null,i="."){if("string"!=typeof s||"object"!=typeof t||null===t)return e;let r=[];this.__worker(t,s,!1,i,(({cursor:t,lpath:s,i:e})=>{"*"!==s[e]?void 0!==t[s[e]]&&r.push(t[s[e]]):r.push(...t)}));return/(^|\.)\*(\.|$)/.test(s)?r:r.length?r[0]:e}static set(t,s,e,i=!0,r="."){return this.__worker(t,s,i,r,(({cursor:t,lpath:s,i:i})=>{if("*"!==s[i])if("function"!=typeof e)t[s[i]]="object"==typeof e&&null!==e?structuredClone(e):e;else{const r=e(t[s[i]]);void 0===t[s[i]]&&void 0===r||(t[s[i]]=r)}else for(let s of Object.keys(t))if("function"!=typeof e)t[s]="object"==typeof e&&null!==e?structuredClone(e):e;else{const i=e(t[s]);void 0===t[s]&&void 0===i||(t[s]=i)}}))}static flat(t){let s={};if("object"!=typeof t||null===t)return s;let e=[[t,""]];for(let t=0;t<e.length;t++){let[i,r]=e[t];Array.isArray(i)?i.forEach(((t,s)=>e.push([t,`${r}${r?".":""}${s}`]))):"object"!=typeof i?s[r]=i:Object.entries(i).forEach((([t,s])=>e.push([s,`${r}${r?".":""}${t}`])))}return s}}class c{static isNumber(t){return"number"==typeof t&&!isNaN(t)}static isString(t){return"string"==typeof t}static isBoolean(t){return"boolean"==typeof t}static isObject(t){return null!==t&&"object"==typeof t}static isArray(t){return Array.isArray(t)}static isFunction(t){return"function"==typeof t}static isset(t){return void 0!==t}static isEmpty(t){return null==t||"string"==typeof t&&!t.length||"object"==typeof t&&!Object.keys(t).length||Array.isArray(t)&&!t.length}static secureType(t,s="isset"){return"number"===s||"num"===s?this.isNumber(t)?t:0:"integer"===s||"int"===s?this.isNumber(t)?Math.floor(t):0:"string"===s||"str"===s?this.isString(t)?t:"":"boolean"===s||"bool"===s?!!this.isBoolean(t)&&t:"object"===s||"obj"===s?this.isObject(t)?t:{}:"function"===s||"fct"===s?this.isFunction(t)?t:()=>{}:"array"===s?this.isArray(t)?t:[]:"isset"===s&&this.isset(t)?t:null}static ctrlParams(t={},s={}){return t=c.secureType(t,"object"),s=c.secureType(s,"object"),Object.entries(s).reduce(((t,[s,e])=>{let i=a.get(t,s);return e?.default&&c.isEmpty(i)&&(i=structuredClone([e.default])[0]),e?.type&&!e?.optional&&(i=c.secureType(i,e.type)),c.isNumber(i)&&c.isNumber(e?.min)&&(i=Math.max(e.min,i)),c.isNumber(i)&&c.isNumber(e?.max)&&(i=Math.min(i,e.max)),a.set(t,s,i),t}),structuredClone(t))}static jsonEncode(t,s=null,e=void 0){let i=[];return JSON.stringify(t,((t,s)=>{if("object"==typeof s&&null!==s){if(i.includes(s))return e;i.push(s)}return s}),s)}static jsonDecode(t,s=!0){try{return JSON.parse(t)}catch(t){return s&&console.error(t),{}}}static jsonParse(t){return this.jsonDecode(t)}static jsonCopy(t){return this.jsonDecode(this.jsonEncode(t))}}class h{static THREAD_LIMIT=15;static THREAD_WAIT=1;constructor(t=h.THREAD_LIMIT,s=h.THREAD_WAIT){this._limit=Number(t),this._wait=Number(s),this._waitList=[],this._threads=[],this._watchers=[],this._nbWaiting=0,this._nbRunning=0}run(t){"function"==typeof t&&(this._nbRunning<this._limit&&!this._nbWaiting?this.__runProcess(t):(this._nbWaiting++,this._waitList.push(t)))}__runProcess(t){this._nbRunning++,this._threads.push(t),setTimeout((()=>{t((()=>this.__endProcess(t)))}),this._nbWaiting?this._wait:1)}__endProcess(t){const s=this._threads.indexOf(t);if(!(s<0))if(this._threads.splice(s,1),this._nbRunning--,this._nbWaiting)this._nbWaiting--,this.__runProcess(this._waitList.shift());else if(!this._nbRunning){let t;for(;t=this._watchers.shift(),t;)t()}}watch(){return new Promise((t=>{this._nbWaiting+this._nbRunning?this._watchers.push(t):t()}))}stop(){return this._waitList=[],this._nbWaiting=0,this}}function u(){return u._uid=Math.max(u._uid+1,Date.now()),u._uid.toString(16)}u._uid=0;class _{static MAIN_FLOW="main";constructor(){this._flows=new Map,this._actions={route:this.__actionRoute,console:this.__actionConsole,switch:this.__actionSwitch}}execute(t,s={},e=_.MAIN_FLOW){const i=this._flows.get(e);if(!i)return!1;const r=u();return i.send({topic:`${e}-${r}`,payload:s?.payload||r,callback:t,args:s,job:r}),!0}__actionRoute(t,s){const e=(t=_.ctrlParams(t,{condition:{type:"string",optional:!0},target:{type:"string"}})).condition?new Function("msg",t.condition):null;if(!e||e&&e(s)){const e=this._flows.get(t.target);return e?void e.send(s):void console.warn(`RedPipeFlow.warn: route "${t.target}" not found.`)}return s}__actionConsole(t,s){for(let e of["log","warn","error"])if(t?.[e])if("string"!=typeof t[e]?.function)console[e](t[e]);else{const i=new Function("msg",t.log.function);console[e](i(s))}return s}__actionSwitch(t,s){return t=_.ctrlParams(t,{source:{type:"string",default:"msg.payload"},target:{type:"string",optional:!0}}),_.setNested({msg:s},t.target,c.secureType(_.getNested({msg:s},t.source||t.target,""),"string")),s}loadActions(t){for(let s of Object.keys(t))"function"==typeof t[s]&&(t[s].length<2||(this._actions[s]=t[s]));return this}loadFlows(t){for(let[s,e]of Object.entries(t)){if(!s)continue;const t=new o;let i=!0;for(let{action:r,...n}of e)r&&(this._actions[r]?t.pipe(this._actions[r].bind(this,n)):(console.warn(`RedPipeFlow.warn: ${s} -> action ${r} is not found.`),i=!1));i?(this._flows.set(s,t),t.on(o.EVENT_DATA,(t=>{if("function"==typeof t.callback)return t.callback(t);console.warn(`RedPipeFlow.warn: ${s} no has callback.\n`)})),t.on(o.EVENT_ERROR,(({payload:t})=>{console.error(t)}))):console.warn(`RedPipeFlow.warn: ${s} is not fully supported.\n`)}return this}static ctrlParams(t={},s={}){return c.ctrlParams(t,s)}static getNested(t,s,e=null,i="."){return a.get(t,s,e,i)}static setNested(t,s,e,i=!0,r="."){return a.set(t,s,e,i,r)}static bindVars(t,s){return t.replace(/\{([^}]+)\}/g,((t,e)=>a.set(s,e,t)))}}function l(t,s,e){t=_.ctrlParams(t,{source:{type:"string",default:"msg.payload"},target:{type:"string",default:"msg.payload"}});try{const i=c[e?"jsonEncode":"jsonDecode"](_.getNested({msg:s},t.source));_.setNested({msg:s},t.target,i,!0)}catch(t){return console.warn(t),s}return s}const f={set_var:(t,s)=>(t=_.ctrlParams(t,{target:{type:"string",default:"msg.payload"},content:{type:"string"}}),_.setNested({msg:s},t.target,t.content,!0),s),json_encode:(t,s)=>l(t,s,!0),json_decode:(t,s)=>l(t,s,!1)};exports.Format=c,exports.Nested=a,exports.Queue=h,exports.RedPipeFlow=_,exports.redPipeCommon=f,exports.uniqid=u;
